Build란?
index.html을 보면
공백이 하나도 없고 읽을수가 없음
why? Create React App이
실제 프로덕션 환경의 앱을 만들기위해서
이미 가지고 있는 index.html에서의 공백과 같이
불필요한 용량을 차지하는 정보들을 삭제 시킴

<역할>
1. 불필요한 용량 감소
2. 보안적, 심미적(에러,경고) 좋지 않은 내용 제거

결론 -> 실제로 서비스할때는 build안의 파일들을
배포한다.
웹 서버의 문서를 찾는 최상의 디렉토리를 build에
위치시키면 된다.

npx serve -s build 

----------------------------------------------

★Component 만드는 방법(매우 중요)

`` 템플릿`` ps. React는 JavaScript와 다르다.
class App extends Component {
  render() {
    return (
    <div className="App">
      Hello, React!!
    </div>
    );
  }
}

-> 패턴을 잘 기억하고 예제화를 많이 해보자!

-------------------------------------------------

props - Component안의 Class를 {this.props.xxxx}으로
        변수화 시키고  Component의 속성 값을 따로
        할당해 유동적으로 사용할 수 있음.

--------------------------------------------------

React Developer Tools

현재의 status를 알 수 있는 도구
F12 개발자 도구를 통해 Component의 내용 등을
변환할 수 있음 간편하게!

--------------------------------------------------

state? ->(vs props) 비교하며 알아가자!

다양한 Component를 만들기위해 필요한 것!
-> props도 더 잘 알아갈 수 있어!

짚고 넘어갈 내용
>> 어떠한 컴포넌트가 실행 될 때 render라는 함수보다
먼저 실행이 되면서 그 컴포넌트를 초기화 시켜주고 싶은
코드는 Constructor 안에다가 작성한다.
->> 초기화를 담당한다.

>> 정확하게는 전선이 삐져나온 전자기기를 생각해보자
   굉장히 사고 싶지 않겠죠?
   그래서 코드의 내용을 철저히 은닉하고 보완하는 느낌으로
   사용하는 것으로 활용하자!

-----------------------------------------------------

Key? 각각 리스트 항목에는 서로를 구분할 수 있는
     key 값을 요구한다.(주의)
-> React가 내부적으로 필요하기에 요구하는 부분!!

------------------------------------------------------

Event? props state event 3자의 상호작용으로 역동적인
       App 생성

------------------------------------------------------

bind란 무엇인가? }.bind()

예를 들면, obj라는 함수의 this 값을 다른 함수에서
부여하고 싶을 때 그 함수의 .bind를 부여하고 ()안에
첫번째 인자로 obj를 부여하면 this = obj 로 형성된다.

example)
var obj = {name: 'egoing'};
//undefined
function bindTest(){
  console.log(this.name);
}
//undefined
var bindTest2 = bindTest.bind(obj);
//undefined
bindTest2();
//VM693:2 egoing
//undefined

--------------------------------------------------------

Event setState 함수 이해하기

동적인 state 값을 부여할 때 사용하는 함수
 -> 함수가 호출되며 내부의 여러가지 일을 처리해주는 함수!!

-------------------------------------------------------

Component Event 만들기!!(Event의 생산자 되기)

스스로 이벤트 함수를 생성하여 그의 맞는 이벤트가
잘동작하도록 설정 해준다.

어렵다면 한 수업에만 의존하지 말고 여러가지 컨텐츠 다루기!
-> 벨라포트, ZeroCho 두 수업 참고 해보기!!

---------------------------------------------------------
정상 전환점~!!

<개념 정리>
1. props               vs      state
- read-only(수정 불가)     - changes can be asynchoronous
- can not be modifiied    - can be modifiied using this.setState


베이스 캠프 

